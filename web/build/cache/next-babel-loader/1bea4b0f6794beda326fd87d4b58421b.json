{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nimport { useRouter } from 'next/router';\nexport const NavBar = ({}) => {\n  const router = useRouter();\n  const [{\n    fetching: logoutFetching\n  }, logout] = useLogoutMutation();\n  const [{\n    data,\n    fetching\n  }] = useMeQuery({\n    pause: isServer()\n  });\n  let body = null; // data is loading\n\n  if (fetching) {// user not logged in\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(React.Fragment, null, __jsx(NextLink, {\n      href: \"/login\"\n    }, __jsx(Link, {\n      color: \"black\",\n      mr: 2\n    }, \"login\")), __jsx(NextLink, {\n      href: \"/register\"\n    }, __jsx(Link, {\n      color: \"black\"\n    }, \"register\"))); // user is logged in\n  } else {\n    body = __jsx(Flex, {\n      align: \"center\"\n    }, __jsx(NextLink, {\n      href: \"/create-post\"\n    }, __jsx(Button, {\n      as: Link,\n      mr: 4\n    }, \"Create Post\")), __jsx(Box, {\n      mr: 2\n    }, data.me.username), __jsx(Button, {\n      onClick: async () => {\n        await logout();\n        router.reload();\n      },\n      isLoading: logoutFetching,\n      variant: \"link\"\n    }, \"logout\"));\n  }\n\n  return __jsx(Flex, {\n    zIndex: 1,\n    position: \"sticky\",\n    top: 0,\n    bg: \"tan\",\n    p: 4\n  }, __jsx(Flex, {\n    flex: 1,\n    maxW: 800,\n    m: \"auto\",\n    align: \"center\"\n  }, __jsx(NextLink, {\n    href: \"/\"\n  }, __jsx(Link, null, __jsx(Heading, null, \"Reddit\"))), __jsx(Box, {\n    ml: 'auto'\n  }, body)));\n};","map":null,"metadata":{},"sourceType":"module"}