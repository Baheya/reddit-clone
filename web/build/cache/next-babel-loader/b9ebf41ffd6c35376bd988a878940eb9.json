{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Flex, IconButton } from '@chakra-ui/core';\nimport { useVoteMutation } from '../generated/graphql';\nexport var UpvoteSection = function UpvoteSection(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState('not-loading'),\n      loadingState = _useState[0],\n      setLoadingState = _useState[1];\n\n  var _useVoteMutation = useVoteMutation(),\n      _useVoteMutation2 = _slicedToArray(_useVoteMutation, 2),\n      vote = _useVoteMutation2[1];\n\n  return __jsx(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4\n  }, __jsx(IconButton, {\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(post.voteStatus === 1)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setLoadingState('upvote-loading');\n              _context.next = 5;\n              return vote({\n                postId: post.id,\n                value: 1\n              });\n\n            case 5:\n              setLoadingState('not-loading');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })),\n    variantColor: post.voteStatus === 1 ? 'green' : undefined,\n    isLoading: loadingState === 'upvote-loading',\n    icon: \"chevron-up\",\n    \"aria-label\": \"upvote post\"\n  }), post.votes, __jsx(IconButton, {\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(post.voteStatus === -1)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              setLoadingState('downvote-loading');\n              _context2.next = 5;\n              return vote({\n                postId: post.id,\n                value: -1\n              });\n\n            case 5:\n              setLoadingState('not-loading');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    variantColor: post.voteStatus === -1 ? 'red' : undefined,\n    isLoading: loadingState === 'downvote-loading',\n    icon: \"chevron-down\",\n    \"aria-label\": \"downvote-post\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}