{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Flex, IconButton } from '@chakra-ui/core';\nimport { useVoteMutation } from '../generated/graphql';\nexport const UpvoteSection = ({\n  post\n}) => {\n  const {\n    0: loadingState,\n    1: setLoadingState\n  } = useState('not-loading');\n  const [, vote] = useVoteMutation();\n  return __jsx(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4\n  }, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === 1) {\n        return;\n      }\n\n      setLoadingState('upvote-loading');\n      await vote({\n        postId: post.id,\n        value: 1\n      });\n      setLoadingState('not-loading');\n    },\n    variantColor: post.voteStatus === 1 ? 'green' : undefined,\n    isLoading: loadingState === 'upvote-loading',\n    icon: \"chevron-up\",\n    \"aria-label\": \"upvote post\"\n  }), post.votes, __jsx(IconButton, {\n    onClick: async () => {\n      if (post.voteStatus === -1) {\n        return;\n      }\n\n      setLoadingState('downvote-loading');\n      await vote({\n        postId: post.id,\n        value: -1\n      });\n      setLoadingState('not-loading');\n    },\n    variantColor: post.voteStatus === -1 ? 'red' : undefined,\n    isLoading: loadingState === 'downvote-loading',\n    icon: \"chevron-down\",\n    \"aria-label\": \"downvote-post\"\n  }));\n};","map":null,"metadata":{},"sourceType":"module"}