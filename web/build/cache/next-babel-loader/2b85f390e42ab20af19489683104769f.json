{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpvoteSection } from '../components/UpvoteSection';\nimport { usePostsQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nvar Index = function Index() {\n  var _useState = useState({\n    limit: 15,\n    cursor: null\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _usePostsQuery = usePostsQuery({\n    variables: variables\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      error = _usePostsQuery2$.error,\n      fetching = _usePostsQuery2$.fetching;\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", null, __jsx(\"div\", null, \"no posts\"), __jsx(\"div\", null, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  return __jsx(Layout, null, !data && fetching ? __jsx(\"div\", null, \"loading...\") : __jsx(Stack, {\n    spacing: 8\n  }, data.posts.posts.map(function (p) {\n    return !p ? null : __jsx(Flex, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\"\n    }, __jsx(UpvoteSection, {\n      post: p\n    }), __jsx(Box, {\n      flex: 1\n    }, __jsx(NextLink, {\n      href: \"/post/[id]\",\n      as: \"/post/\".concat(p.id)\n    }, __jsx(Link, null, __jsx(Heading, {\n      fontSize: \"xl\"\n    }, p.title))), __jsx(Text, null, \"posted by \", p.author.username), __jsx(Flex, {\n      align: \"center\"\n    }, __jsx(Text, {\n      flex: 1,\n      mt: 4\n    }, p.textSnippet), __jsx(EditDeletePostButtons, {\n      authorId: p.author.id,\n      id: p.id\n    }))));\n  })), data && data.posts.hasMore && __jsx(Flex, null, __jsx(Button, {\n    onClick: function onClick() {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    isLoading: fetching,\n    m: \"auto\",\n    my: 8\n  }, \"Load more\")));\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);","map":null,"metadata":{},"sourceType":"module"}