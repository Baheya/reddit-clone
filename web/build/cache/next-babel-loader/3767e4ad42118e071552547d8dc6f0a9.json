{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\nvar __jsx = React.createElement;\nimport { Box, Button } from '@chakra-ui/core';\nimport { Form, Formik } from 'formik';\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { InputField } from '../components/InputField';\nimport { Layout } from '../components/Layout';\nimport { useCreatePostMutation } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { useIsAuth } from '../utils/useIsAuth';\n\nvar CreatePost = function CreatePost(_ref) {\n  _objectDestructuringEmpty(_ref);\n\n  var router = useRouter();\n  useIsAuth();\n\n  var _useCreatePostMutatio = useCreatePostMutation(),\n      _useCreatePostMutatio2 = _slicedToArray(_useCreatePostMutatio, 2),\n      createPost = _useCreatePostMutatio2[1];\n\n  return __jsx(Layout, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      title: '',\n      text: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var setErrors, _yield$createPost, error;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return createPost({\n                  input: values\n                });\n\n              case 3:\n                _yield$createPost = _context.sent;\n                error = _yield$createPost.error;\n\n                if (!error) {\n                  router.push('/');\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, null, __jsx(InputField, {\n      name: \"title\",\n      label: \"Title\",\n      placeholder: \"title\"\n    }), __jsx(Box, {\n      mt: 4\n    }, __jsx(InputField, {\n      name: \"text\",\n      label: \"Body\",\n      placeholder: \"text...\",\n      textarea: true\n    })), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      variantColor: \"teal\",\n      isLoading: isSubmitting\n    }, \"Create Post\"));\n  }));\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);","map":null,"metadata":{},"sourceType":"module"}