{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { NavBar } from '../components/NavBar';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\n\nvar Index = function Index() {\n  _s();\n\n  var _usePostsQuery = usePostsQuery(),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      data = _usePostsQuery2[0].data;\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(NavBar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }), !data ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"loading...\") : data.posts.map(function (p) {\n    return __jsx(\"div\", {\n      key: p.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 31\n      }\n    }, p.title);\n  }));\n};\n\n_s(Index, \"zm30ACOHuGXmuTB58o1tVvdVF8Y=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient)(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx"],"names":["NavBar","withUrqlClient","createUrqlClient","usePostsQuery","Index","data","posts","map","p","id","title"],"mappings":";;;;;;;;AAAA;AACA,SAASA,MAAT,QAAuB,sBAAvB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,aAAT,QAA8B,sBAA9B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,GAAM;AAAA;;AAAA,uBACCD,aAAa,EADd;AAAA;AAAA,MACTE,IADS,sBACTA,IADS;;AAElB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAGG,CAACA,IAAD,GACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,GAGCA,IAAI,CAACC,KAAL,CAAWC,GAAX,CAAe,UAACC,CAAD;AAAA,WAAO;AAAK,MAAA,GAAG,EAAEA,CAAC,CAACC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiBD,CAAC,CAACE,KAAnB,CAAP;AAAA,GAAf,CANJ,CADF;AAWD,CAbD;;GAAMN,K;UACeD,a;;;KADfC,K;AAeN,eAAeH,cAAc,CAACC,gBAAD,CAAd,CAAiCE,KAAjC,CAAf","sourcesContent":["// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { NavBar } from '../components/NavBar';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\n\nconst Index = () => {\n  const [{ data }] = usePostsQuery();\n  return (\n    <div>\n      <NavBar />\n      {/* <DarkModeSwitch /> */}\n      {!data ? (\n        <div>loading...</div>\n      ) : (\n        data.posts.map((p) => <div key={p.id}>{p.title}</div>)\n      )}\n    </div>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Index);\n"]},"metadata":{},"sourceType":"module"}