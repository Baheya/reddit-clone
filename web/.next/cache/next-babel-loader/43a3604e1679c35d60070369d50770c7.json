{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button, Link, Flex } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\nexport const Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        if (typeof router.query.next === 'string') {\n          router.push(router.query.next);\n        } else {\n          // worked\n          router.push('/');\n        }\n      }\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(InputField, {\n    name: \"usernameOrEmail\",\n    label: \"Username or Email\",\n    placeholder: \"username or email\"\n  }), __jsx(Box, {\n    mt: 4\n  }, __jsx(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"password\",\n    type: \"password\"\n  })), __jsx(Flex, {\n    mt: 2\n  }, __jsx(NextLink, {\n    href: \"/forgot-password\"\n  }, __jsx(Link, {\n    ml: \"auto\"\n  }, \"Forgot password?\"))), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting\n  }, \"Login\"))));\n};\nexport default withUrqlClient(createUrqlClient)(Login);","map":null,"metadata":{},"sourceType":"module"}