{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useRegisterMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nexport const Register = ({}) => {\n  const router = useRouter();\n  const [, register] = useRegisterMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      email: '',\n      username: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await register({\n        options: values\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors) {\n        setErrors(toErrorMap(response.data.register.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.register.user) {\n        // worked\n        router.push('/');\n      }\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(InputField, {\n    name: \"username\",\n    label: \"Username\",\n    placeholder: \"username\"\n  }), __jsx(Box, {\n    mt: 4\n  }, __jsx(InputField, {\n    name: \"email\",\n    label: \"Email\",\n    placeholder: \"email\"\n  })), __jsx(Box, {\n    mt: 4\n  }, __jsx(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"password\",\n    type: \"password\"\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting\n  }, \"Register\"))));\n};\nexport default withUrqlClient(createUrqlClient)(Register);","map":null,"metadata":{},"sourceType":"module"}