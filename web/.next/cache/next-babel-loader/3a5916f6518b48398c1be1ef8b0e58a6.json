{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { useDeletePostMutation, useMeQuery, usePostsQuery } from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport { Link, Stack, Box, Heading, Text, Flex, Button, IconButton } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { UpvoteSection } from '../components/UpvoteSection';\n\nconst Index = () => {\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    limit: 15,\n    cursor: null\n  });\n  const [{\n    data: meData\n  }] = useMeQuery();\n  const [{\n    data,\n    fetching\n  }] = usePostsQuery({\n    variables\n  });\n  const [, deletePost] = useDeletePostMutation();\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 12\n      }\n    }, \"no posts\");\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, !data && fetching ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(p => {\n    var _meData$me;\n\n    return !p ? null : __jsx(Flex, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }, __jsx(UpvoteSection, {\n      post: p,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }), __jsx(Box, {\n      flex: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/[id]\",\n      as: `/post/${p.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    }, __jsx(Link, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }, __jsx(Heading, {\n      fontSize: \"xl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 23\n      }\n    }, p.title))), __jsx(Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }\n    }, \"posted by \", p.author.username), __jsx(Flex, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    }, __jsx(Text, {\n      flex: 1,\n      mt: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }, p.textSnippet), (meData === null || meData === void 0 ? void 0 : (_meData$me = meData.me) === null || _meData$me === void 0 ? void 0 : _meData$me.id) !== p.author.id ? null : __jsx(Box, {\n      ml: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }\n    }, __jsx(NextLink, {\n      href: \"/post/edit/[id]\",\n      as: `/post/edit/${p.id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, __jsx(IconButton, {\n      as: Link,\n      ml: \"auto\",\n      mr: 4,\n      icon: \"edit\",\n      \"aria-label\": \"Edit Post\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 27\n      }\n    })), __jsx(IconButton, {\n      ml: \"auto\",\n      icon: \"delete\",\n      \"aria-label\": \"Delete Post\",\n      onClick: () => {\n        deletePost({\n          id: p.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    })))));\n  })), data && data.posts.hasMore && __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    isLoading: fetching,\n    m: \"auto\",\n    my: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, \"Load more\")));\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx"],"names":["withUrqlClient","createUrqlClient","useDeletePostMutation","useMeQuery","usePostsQuery","Layout","Link","Stack","Box","Heading","Text","Flex","Button","IconButton","NextLink","useState","UpvoteSection","Index","variables","setVariables","limit","cursor","data","meData","fetching","deletePost","posts","map","p","id","title","author","username","textSnippet","me","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport {\n  useDeletePostMutation,\n  useMeQuery,\n  usePostsQuery,\n} from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport {\n  Link,\n  Stack,\n  Box,\n  Heading,\n  Text,\n  Flex,\n  Button,\n  Icon,\n  IconButton,\n} from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { UpvoteSection } from '../components/UpvoteSection';\n\nconst Index = () => {\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  });\n\n  const [{ data: meData }] = useMeQuery();\n  const [{ data, fetching }] = usePostsQuery({ variables });\n\n  const [, deletePost] = useDeletePostMutation();\n\n  if (!fetching && !data) {\n    return <div>no posts</div>;\n  }\n  return (\n    <Layout>\n      {/* <DarkModeSwitch /> */}\n      {!data && fetching ? (\n        <div>loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpvoteSection post={p} />\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.author.username}</Text>\n                  <Flex align=\"center\">\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n                    {meData?.me?.id !== p.author.id ? null : (\n                      <Box ml=\"auto\">\n                        <NextLink\n                          href=\"/post/edit/[id]\"\n                          as={`/post/edit/${p.id}`}\n                        >\n                          <IconButton\n                            as={Link}\n                            ml=\"auto\"\n                            mr={4}\n                            icon=\"edit\"\n                            aria-label=\"Edit Post\"\n                          />\n                        </NextLink>\n                        <IconButton\n                          ml=\"auto\"\n                          icon=\"delete\"\n                          aria-label=\"Delete Post\"\n                          onClick={() => {\n                            deletePost({ id: p.id });\n                          }}\n                        />\n                      </Box>\n                    )}\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore && (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variables.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              });\n            }}\n            isLoading={fetching}\n            m=\"auto\"\n            my={8}\n          >\n            Load more\n          </Button>\n        </Flex>\n      )}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}