{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { Wrapper } from '../../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { InputField } from '../../components/InputField';\nimport { Button, Box, Link, Flex } from '@chakra-ui/core';\nimport { useChangePasswordMutation } from '../../generated/graphql';\nimport { useRouter } from 'next/router';\nimport { useState } from 'react';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\nimport NextLink from 'next/link';\nexport const ChangePassword = () => {\n  const router = useRouter();\n  const [, changePassword] = useChangePasswordMutation();\n  const {\n    0: tokenError,\n    1: setTokenError\n  } = useState('');\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      newPassword: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await changePassword({\n        newPassword: values.newPassword,\n        token: typeof router.query.token === 'string' ? router.query.token : ''\n      });\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.changePassword.errors) {\n        const errorMap = toErrorMap(response.data.changePassword.errors);\n\n        if ('token' in errorMap) {\n          setTokenError(errorMap.token);\n        }\n\n        setErrors(errorMap);\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.changePassword.user) {\n        // worked\n        router.push('/');\n      }\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, null, __jsx(InputField, {\n    name: \"newPassword\",\n    label: \"New Password\",\n    placeholder: \"new password\",\n    type: \"password\"\n  }), tokenError && __jsx(Flex, null, __jsx(Box, {\n    mr: 2,\n    color: \"red\"\n  }, tokenError), __jsx(NextLink, {\n    href: \"/forgot-password\"\n  }, __jsx(Link, null, \"go forget it again\"))), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting\n  }, \"Change Password\"))));\n};\nexport default withUrqlClient(createUrqlClient)(ChangePassword);","map":null,"metadata":{},"sourceType":"module"}