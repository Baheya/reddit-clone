{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useMeQuery } from '../generated/graphql';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\nexport var useIsAuth = function useIsAuth() {\n  _s();\n\n  var _useMeQuery = useMeQuery(),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var router = useRouter();\n  useEffect(function () {\n    if (!fetching && !(data === null || data === void 0 ? void 0 : data.me)) {\n      router.replace('/login?next=' + router.pathname);\n    }\n  }, [fetching, data, router]);\n};\n\n_s(useIsAuth, \"nVIRD6FggEioIuRI8oM71i6UBAU=\", false, function () {\n  return [useMeQuery, useRouter];\n});","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/utils/useisAuth.ts"],"names":["useMeQuery","useRouter","useEffect","useIsAuth","data","fetching","router","me","replace","pathname"],"mappings":";;;;AAAA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,SAAT,QAA0B,OAA1B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAAA;;AAAA,oBACAH,UAAU,EADV;AAAA;AAAA;AAAA,MACpBI,IADoB,iBACpBA,IADoB;AAAA,MACdC,QADc,iBACdA,QADc;;AAE7B,MAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEAC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACG,QAAD,IAAa,EAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,EAAP,CAAjB,EAA4B;AAC1BD,MAAAA,MAAM,CAACE,OAAP,CAAe,iBAAiBF,MAAM,CAACG,QAAvC;AACD;AACF,GAJQ,EAIN,CAACJ,QAAD,EAAWD,IAAX,EAAiBE,MAAjB,CAJM,CAAT;AAKD,CATM;;GAAMH,S;UACkBH,U,EACdC,S","sourcesContent":["import { useMeQuery } from '../generated/graphql';\nimport { useRouter } from 'next/router';\nimport { useEffect } from 'react';\n\nexport const useIsAuth = () => {\n  const [{ data, fetching }] = useMeQuery();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!fetching && !data?.me) {\n      router.replace('/login?next=' + router.pathname);\n    }\n  }, [fetching, data, router]);\n};\n"]},"metadata":{},"sourceType":"module"}