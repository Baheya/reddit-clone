{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/create-post.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport { InputField } from '../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { useCreatePostMutation } from '../generated/graphql';\nimport { useRouter } from 'next/router';\n\nconst CreatePost = ({}) => {\n  const router = useRouter();\n  const [, createPost] = useCreatePostMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: '',\n      text: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      await createPost({\n        input: values\n      });\n      router.push('/');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"title\",\n    label: \"Title\",\n    placeholder: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 15\n    }\n  }, __jsx(InputField, {\n    name: \"text\",\n    label: \"Body\",\n    placeholder: \"text...\",\n    textarea: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Create Post\")))));\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/create-post.tsx"],"names":["React","Wrapper","Formik","Form","InputField","Box","Button","withUrqlClient","createUrqlClient","useCreatePostMutation","useRouter","CreatePost","router","createPost","title","text","values","setErrors","input","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,qBAAT,QAAsC,sBAAtC;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,UAAwB,GAAG,CAAC,EAAD,KAAQ;AACvC,QAAMC,MAAM,GAAGF,SAAS,EAAxB;AACA,QAAM,GAAGG,UAAH,IAAiBJ,qBAAqB,EAA5C;AACA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEK,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AACzC,YAAMJ,UAAU,CAAC;AAAEK,QAAAA,KAAK,EAAEF;AAAT,OAAD,CAAhB;AACAJ,MAAAA,MAAM,CAACO,IAAP,CAAY,GAAZ;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,OAA/B;AAAuC,IAAA,WAAW,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CARJ,CADF,CADF,CADF;AAmCD,CAtCD;;AAwCA,eAAeb,cAAc,CAACC,gBAAD,CAAd,CAAiCG,UAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport { InputField } from '../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { useCreatePostMutation } from '../generated/graphql';\nimport { useRouter } from 'next/router';\n\nconst CreatePost: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, createPost] = useCreatePostMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Wrapper variant=\"small\">\n        <Formik\n          initialValues={{ title: '', text: '' }}\n          onSubmit={async (values, { setErrors }) => {\n            await createPost({ input: values });\n            router.push('/');\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <InputField name=\"title\" label=\"Title\" placeholder=\"title\" />\n              <Box mt={4}>\n                <InputField\n                  name=\"text\"\n                  label=\"Body\"\n                  placeholder=\"text...\"\n                  textarea\n                />\n              </Box>\n              <Button\n                mt={4}\n                type=\"submit\"\n                variantColor=\"teal\"\n                isLoading={isSubmitting}\n              >\n                Create Post\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrapper>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);\n"]},"metadata":{},"sourceType":"module"}