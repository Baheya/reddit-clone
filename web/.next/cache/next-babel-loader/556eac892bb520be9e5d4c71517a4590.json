{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/components/UpvoteSection.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Flex, IconButton } from '@chakra-ui/core';\nimport { useVoteMutation } from '../generated/graphql';\nexport var UpvoteSection = function UpvoteSection(_ref) {\n  _s();\n\n  var post = _ref.post;\n\n  var _useState = useState('not-loading'),\n      loadingState = _useState[0],\n      setLoadingState = _useState[1];\n\n  var _useVoteMutation = useVoteMutation(),\n      _useVoteMutation2 = _slicedToArray(_useVoteMutation, 2),\n      vote = _useVoteMutation2[1];\n\n  return __jsx(Flex, {\n    direction: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    mr: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(IconButton, {\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(post.voteStatus === 1)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\");\n\n            case 2:\n              setLoadingState('upvote-loading');\n              _context.next = 5;\n              return vote({\n                postId: post.id,\n                value: 1\n              });\n\n            case 5:\n              setLoadingState('not-loading');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })),\n    variantColor: post.voteStatus === 1 ? 'green' : undefined,\n    isLoading: loadingState === 'upvote-loading',\n    icon: \"chevron-up\",\n    \"aria-label\": \"upvote post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), post.votes, __jsx(IconButton, {\n    onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(post.voteStatus === -1)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\");\n\n            case 2:\n              setLoadingState('downvote-loading');\n              _context2.next = 5;\n              return vote({\n                postId: post.id,\n                value: -1\n              });\n\n            case 5:\n              setLoadingState('not-loading');\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    })),\n    variantColor: post.voteStatus === -1 ? 'red' : undefined,\n    isLoading: loadingState === 'downvote-loading',\n    icon: \"chevron-down\",\n    \"aria-label\": \"downvote-post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }));\n};\n\n_s(UpvoteSection, \"wgtWBzTj8vC0Cw4gEsSFxJOywEE=\", false, function () {\n  return [useVoteMutation];\n});\n\n_c = UpvoteSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpvoteSection\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/components/UpvoteSection.tsx"],"names":["React","useState","Flex","IconButton","useVoteMutation","UpvoteSection","post","loadingState","setLoadingState","vote","voteStatus","postId","id","value","undefined","votes"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,UAAf,QAA+C,iBAA/C;AACA,SAA8BC,eAA9B,QAAqD,sBAArD;AAMA,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBAC/BL,QAAQ,CAE9C,aAF8C,CADuB;AAAA,MAChEM,YADgE;AAAA,MAClDC,eADkD;;AAAA,yBAItDJ,eAAe,EAJuC;AAAA;AAAA,MAI9DK,IAJ8D;;AAKvE,SACE,MAAC,IAAD;AAAM,IAAA,SAAS,EAAC,QAAhB;AAAyB,IAAA,cAAc,EAAC,QAAxC;AAAiD,IAAA,UAAU,EAAC,QAA5D;AAAqE,IAAA,EAAE,EAAE,CAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA,oBACHH,IAAI,CAACI,UAAL,KAAoB,CADjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIPF,cAAAA,eAAe,CAAC,gBAAD,CAAf;AAJO;AAAA,qBAKDC,IAAI,CAAC;AACTE,gBAAAA,MAAM,EAAEL,IAAI,CAACM,EADJ;AAETC,gBAAAA,KAAK,EAAE;AAFE,eAAD,CALH;;AAAA;AASPL,cAAAA,eAAe,CAAC,aAAD,CAAf;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EADT;AAYE,IAAA,YAAY,EAAEF,IAAI,CAACI,UAAL,KAAoB,CAApB,GAAwB,OAAxB,GAAkCI,SAZlD;AAaE,IAAA,SAAS,EAAEP,YAAY,KAAK,gBAb9B;AAcE,IAAA,IAAI,EAAC,YAdP;AAeE,kBAAW,aAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAkBGD,IAAI,CAACS,KAlBR,EAmBE,MAAC,UAAD;AACE,IAAA,OAAO,wEAAE;AAAA;AAAA;AAAA;AAAA;AAAA,oBACHT,IAAI,CAACI,UAAL,KAAoB,CAAC,CADlB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIPF,cAAAA,eAAe,CAAC,kBAAD,CAAf;AAJO;AAAA,qBAKDC,IAAI,CAAC;AACTE,gBAAAA,MAAM,EAAEL,IAAI,CAACM,EADJ;AAETC,gBAAAA,KAAK,EAAE,CAAC;AAFC,eAAD,CALH;;AAAA;AASPL,cAAAA,eAAe,CAAC,aAAD,CAAf;;AATO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF,EADT;AAYE,IAAA,YAAY,EAAEF,IAAI,CAACI,UAAL,KAAoB,CAAC,CAArB,GAAyB,KAAzB,GAAiCI,SAZjD;AAaE,IAAA,SAAS,EAAEP,YAAY,KAAK,kBAb9B;AAcE,IAAA,IAAI,EAAC,cAdP;AAeE,kBAAW,eAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,CADF;AAuCD,CA5CM;;GAAMF,a;UAIMD,e;;;KAJNC,a","sourcesContent":["import React, { useState } from 'react';\nimport { Flex, IconButton, Box, Heading } from '@chakra-ui/core';\nimport { PostSnippetFragment, useVoteMutation } from '../generated/graphql';\n\ninterface UpvoteSectionProps {\n  post: PostSnippetFragment;\n}\n\nexport const UpvoteSection: React.FC<UpvoteSectionProps> = ({ post }) => {\n  const [loadingState, setLoadingState] = useState<\n    'upvote-loading' | 'downvote-loading' | 'not-loading'\n  >('not-loading');\n  const [, vote] = useVoteMutation();\n  return (\n    <Flex direction=\"column\" justifyContent=\"center\" alignItems=\"center\" mr={4}>\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === 1) {\n            return;\n          }\n          setLoadingState('upvote-loading');\n          await vote({\n            postId: post.id,\n            value: 1,\n          });\n          setLoadingState('not-loading');\n        }}\n        variantColor={post.voteStatus === 1 ? 'green' : undefined}\n        isLoading={loadingState === 'upvote-loading'}\n        icon=\"chevron-up\"\n        aria-label=\"upvote post\"\n      />\n      {post.votes}\n      <IconButton\n        onClick={async () => {\n          if (post.voteStatus === -1) {\n            return;\n          }\n          setLoadingState('downvote-loading');\n          await vote({\n            postId: post.id,\n            value: -1,\n          });\n          setLoadingState('not-loading');\n        }}\n        variantColor={post.voteStatus === -1 ? 'red' : undefined}\n        isLoading={loadingState === 'downvote-loading'}\n        icon=\"chevron-down\"\n        aria-label=\"downvote-post\"\n      />\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}