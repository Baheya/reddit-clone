{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/login.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button, Link, Flex } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\nexport const Login = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        if (typeof router.query.next === 'string') {\n          router.push(router.query.next);\n        } else {\n          // worked\n          router.push('/');\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"usernameOrEmail\",\n    label: \"Username or Email\",\n    placeholder: \"username or email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  })), __jsx(Flex, {\n    mt: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, __jsx(NextLink, {\n    href: \"/forgot-password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, __jsx(Link, {\n    ml: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Forgot password?\"))), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, \"Login\"))));\n};\nexport default withUrqlClient(createUrqlClient)(Login);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/login.tsx"],"names":["React","Formik","Form","Box","Button","Link","Flex","Wrapper","InputField","useLoginMutation","toErrorMap","useRouter","withUrqlClient","createUrqlClient","NextLink","Login","router","login","usernameOrEmail","password","values","setErrors","response","data","errors","user","query","next","push","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button, Link, Flex } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useLoginMutation } from '../generated/graphql';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { useRouter } from 'next/router';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport NextLink from 'next/link';\n\nexport const Login: React.FC<{}> = ({}) => {\n  const router = useRouter();\n  const [, login] = useLoginMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            if (typeof router.query.next === 'string') {\n              router.push(router.query.next);\n            } else {\n              // worked\n              router.push('/');\n            }\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              label=\"Username or Email\"\n              placeholder=\"username or email\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                placeholder=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Flex mt={2}>\n              <NextLink href=\"/forgot-password\">\n                <Link ml=\"auto\">Forgot password?</Link>\n              </NextLink>\n            </Flex>\n            <Button\n              mt={4}\n              type=\"submit\"\n              variantColor=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(Login);\n"]},"metadata":{},"sourceType":"module"}