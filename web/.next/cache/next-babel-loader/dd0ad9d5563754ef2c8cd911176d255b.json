{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/create-post.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport login from './login';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { InputField } from '../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst CreatePost = ({}) => {\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      title: '',\n      text: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data, _response$data2;\n\n      const response = await login(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n        setErrors(toErrorMap(response.data.login.errors));\n      } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n        // worked\n        router.push('/');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"title\",\n    label: \"Title\",\n    placeholder: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }\n  }, __jsx(InputField, {\n    name: \"text\",\n    label: \"Body\",\n    placeholder: \"text...\",\n    textarea: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Create Post\")))));\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/create-post.tsx"],"names":["React","Wrapper","Formik","Form","login","toErrorMap","InputField","Box","Button","withUrqlClient","createUrqlClient","CreatePost","title","text","values","setErrors","response","data","errors","user","router","push","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,GAAT,EAA0BC,MAA1B,QAAwC,iBAAxC;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,gBAAT,QAAiC,2BAAjC;;AAEA,MAAMC,UAAwB,GAAG,CAAC,EAAD,KAAQ;AACvC,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,IAAI,EAAE;AAAnB,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACU,MAAD,CAA5B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeb,KAAf,CAAqBc,MAAzB,EAAiC;AAC/BH,QAAAA,SAAS,CAACV,UAAU,CAACW,QAAQ,CAACC,IAAT,CAAcb,KAAd,CAAoBc,MAArB,CAAX,CAAT;AACD,OAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeb,KAAf,CAAqBe,IAAzB,EAA+B;AACpC;AACAC,QAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;AACF,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,OAAjB;AAAyB,IAAA,KAAK,EAAC,OAA/B;AAAuC,IAAA,WAAW,EAAC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAC,MAFR;AAGE,IAAA,WAAW,EAAC,SAHd;AAIE,IAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAUE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAVF,CAbJ,CADF,CADF,CADF;AAwCD,CAzCD;;AA2CA,eAAeb,cAAc,CAACC,gBAAD,CAAd,CAAiCC,UAAjC,CAAf","sourcesContent":["import React from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport login from './login';\nimport { toErrorMap } from '../utils/toErrorMap';\nimport { InputField } from '../components/InputField';\nimport { Box, Flex, Link, Button } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst CreatePost: React.FC<{}> = ({}) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Wrapper variant=\"small\">\n        <Formik\n          initialValues={{ title: '', text: '' }}\n          onSubmit={async (values, { setErrors }) => {\n            const response = await login(values);\n            if (response.data?.login.errors) {\n              setErrors(toErrorMap(response.data.login.errors));\n            } else if (response.data?.login.user) {\n              // worked\n              router.push('/');\n            }\n          }}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <InputField name=\"title\" label=\"Title\" placeholder=\"title\" />\n              <Box mt={4}>\n                <InputField\n                  name=\"text\"\n                  label=\"Body\"\n                  placeholder=\"text...\"\n                  textarea\n                />\n              </Box>\n              <Button\n                mt={4}\n                type=\"submit\"\n                variantColor=\"teal\"\n                isLoading={isSubmitting}\n              >\n                Create Post\n              </Button>\n            </Form>\n          )}\n        </Formik>\n      </Wrapper>\n    </Wrapper>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient)(CreatePost);\n"]},"metadata":{},"sourceType":"module"}