{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Wrapper } from '../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport { InputField } from '../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { useForgotPasswordMutation } from '../generated/graphql';\n\nconst ForgotPassword = ({}) => {\n  const {\n    0: complete,\n    1: setComplete\n  } = useState(false);\n  const [, forgotPassword] = useForgotPasswordMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\"\n  }, __jsx(Formik, {\n    initialValues: {\n      email: ''\n    },\n    onSubmit: async values => {\n      await forgotPassword(values);\n      setComplete(true);\n    }\n  }, ({\n    isSubmitting\n  }) => complete ? __jsx(Box, null, \"if an account with that email exists, we sent you an email\") : __jsx(Form, null, __jsx(InputField, {\n    name: \"email\",\n    label: \"Email\",\n    placeholder: \"email\",\n    type: \"email\"\n  }), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting\n  }, \"forgot password\"))));\n};\n\nexport default withUrqlClient(createUrqlClient)(ForgotPassword);","map":null,"metadata":{},"sourceType":"module"}