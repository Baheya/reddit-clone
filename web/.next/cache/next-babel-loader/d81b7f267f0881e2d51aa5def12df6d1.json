{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpvoteSection } from '../components/UpvoteSection';\nimport { usePostsQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst Index = () => {\n  const {\n    0: variables,\n    1: setVariables\n  } = useState({\n    limit: 15,\n    cursor: null\n  });\n  const [{\n    data,\n    error,\n    fetching\n  }] = usePostsQuery({\n    variables\n  });\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"no posts\"), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, error === null || error === void 0 ? void 0 : error.message));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, !data && fetching ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(p => !p ? null : __jsx(Flex, {\n    key: p.id,\n    p: 5,\n    shadow: \"md\",\n    borderWidth: \"1px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, __jsx(UpvoteSection, {\n    post: p,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  }), __jsx(Box, {\n    flex: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }, __jsx(NextLink, {\n    href: \"/post/[id]\",\n    as: `/post/${p.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 19\n    }\n  }, __jsx(Link, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, __jsx(Heading, {\n    fontSize: \"xl\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }\n  }, p.title))), __jsx(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  }, \"posted by \", p.author.username), __jsx(Flex, {\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }\n  }, __jsx(Text, {\n    flex: 1,\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, p.textSnippet), __jsx(EditDeletePostButtons, {\n    authorId: p.author.id,\n    id: p.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  })))))), data && data.posts.hasMore && __jsx(Flex, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: () => {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    isLoading: fetching,\n    m: \"auto\",\n    my: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Load more\")));\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx"],"names":["Box","Button","Flex","Heading","Link","Stack","Text","withUrqlClient","NextLink","useState","EditDeletePostButtons","Layout","UpvoteSection","usePostsQuery","createUrqlClient","Index","variables","setVariables","limit","cursor","data","error","fetching","message","posts","map","p","id","title","author","username","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { Box, Button, Flex, Heading, Link, Stack, Text } from '@chakra-ui/core';\nimport { withUrqlClient } from 'next-urql';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\nimport { EditDeletePostButtons } from '../components/EditDeletePostButtons';\nimport { Layout } from '../components/Layout';\nimport { UpvoteSection } from '../components/UpvoteSection';\nimport { usePostsQuery } from '../generated/graphql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\n\nconst Index = () => {\n  const [variables, setVariables] = useState({\n    limit: 15,\n    cursor: null as null | string,\n  });\n\n  const [{ data, error, fetching }] = usePostsQuery({ variables });\n\n  if (!fetching && !data) {\n    return (\n      <div>\n        <div>no posts</div>\n        <div>{error?.message}</div>\n      </div>\n    );\n  }\n  return (\n    <Layout>\n      {/* <DarkModeSwitch /> */}\n      {!data && fetching ? (\n        <div>loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) =>\n            !p ? null : (\n              <Flex key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n                <UpvoteSection post={p} />\n                <Box flex={1}>\n                  <NextLink href=\"/post/[id]\" as={`/post/${p.id}`}>\n                    <Link>\n                      <Heading fontSize=\"xl\">{p.title}</Heading>\n                    </Link>\n                  </NextLink>\n                  <Text>posted by {p.author.username}</Text>\n                  <Flex align=\"center\">\n                    <Text flex={1} mt={4}>\n                      {p.textSnippet}\n                    </Text>\n\n                    <EditDeletePostButtons authorId={p.author.id} id={p.id} />\n                  </Flex>\n                </Box>\n              </Flex>\n            )\n          )}\n        </Stack>\n      )}\n      {data && data.posts.hasMore && (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variables.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              });\n            }}\n            isLoading={fetching}\n            m=\"auto\"\n            my={8}\n          >\n            Load more\n          </Button>\n        </Flex>\n      )}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}