{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/components/NavBar.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\nexport var NavBar = function NavBar(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useLogoutMutation = useLogoutMutation(),\n      _useLogoutMutation2 = _slicedToArray(_useLogoutMutation, 2),\n      logoutFetching = _useLogoutMutation2[0].fetching,\n      logout = _useLogoutMutation2[1];\n\n  var _useMeQuery = useMeQuery({\n    pause: isServer()\n  }),\n      _useMeQuery2 = _slicedToArray(_useMeQuery, 1),\n      _useMeQuery2$ = _useMeQuery2[0],\n      data = _useMeQuery2$.data,\n      fetching = _useMeQuery2$.fetching;\n\n  var body = null; // data is loading\n\n  if (fetching) {// user not logged in\n  } else if (!(data === null || data === void 0 ? void 0 : data.me)) {\n    body = __jsx(React.Fragment, null, __jsx(NextLink, {\n      href: \"/login\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      color: \"black\",\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"login\")), __jsx(NextLink, {\n      href: \"/register\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, __jsx(Link, {\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, \"register\"))); // user is logged in\n  } else {\n    body = __jsx(Flex, {\n      align: \"center\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, __jsx(NextLink, {\n      href: \"/create-post\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, __jsx(Button, {\n      as: Link,\n      mr: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, \"Create Post\")), __jsx(Box, {\n      mr: 2,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, data.me.username), __jsx(Button, {\n      onClick: function onClick() {\n        logout();\n      },\n      isLoading: logoutFetching,\n      variant: \"link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"logout\"));\n  }\n\n  return __jsx(Flex, {\n    zIndex: 1,\n    position: \"sticky\",\n    top: 0,\n    bg: \"tan\",\n    p: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    maxW: 800,\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(NextLink, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"Reddit\")))), __jsx(Box, {\n    ml: 'auto',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, body));\n};\n\n_s(NavBar, \"bu7Mo57UkJD6Z7YYu+ueXRjOJFY=\", false, function () {\n  return [useLogoutMutation, useMeQuery];\n});\n\n_c = NavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NavBar\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/components/NavBar.tsx"],"names":["React","Box","Link","Flex","Button","Heading","NextLink","useMeQuery","useLogoutMutation","isServer","NavBar","logoutFetching","fetching","logout","pause","data","body","me","username"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Box, Link, Flex, Button, Heading } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useMeQuery, useLogoutMutation } from '../generated/graphql';\nimport { isServer } from '../utils/isServer';\n\ninterface NavBarProps {}\n\nexport const NavBar: React.FC<NavBarProps> = ({}) => {\n  const [{ fetching: logoutFetching }, logout] = useLogoutMutation();\n  const [{ data, fetching }] = useMeQuery({\n    pause: isServer(),\n  });\n  let body = null;\n\n  // data is loading\n  if (fetching) {\n    // user not logged in\n  } else if (!data?.me) {\n    body = (\n      <>\n        <NextLink href=\"/login\">\n          <Link color=\"black\" mr={2}>\n            login\n          </Link>\n        </NextLink>\n        <NextLink href=\"/register\">\n          <Link color=\"black\">register</Link>\n        </NextLink>\n      </>\n    );\n    // user is logged in\n  } else {\n    body = (\n      <Flex align=\"center\">\n        <NextLink href=\"/create-post\">\n          <Button as={Link} mr={4}>\n            Create Post\n          </Button>\n        </NextLink>\n        <Box mr={2}>{data.me.username}</Box>\n        <Button\n          onClick={() => {\n            logout();\n          }}\n          isLoading={logoutFetching}\n          variant=\"link\"\n        >\n          logout\n        </Button>\n      </Flex>\n    );\n  }\n  return (\n    <Flex zIndex={1} position=\"sticky\" top={0} bg=\"tan\" p={4}>\n      <Flex maxW={800} align=\"center\">\n        <NextLink href=\"/\">\n          <Link>\n            <Heading>Reddit</Heading>\n          </Link>\n        </NextLink>\n      </Flex>\n      <Box ml={'auto'}>{body}</Box>\n    </Flex>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}