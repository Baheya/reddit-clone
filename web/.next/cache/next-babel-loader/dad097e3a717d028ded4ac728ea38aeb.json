{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/change-password/[token].tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Wrapper } from '../../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport login from '../login';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { InputField } from '../../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\nexport var ChangePassword = function ChangePassword(_ref) {\n  var token = _ref.token;\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      usernameOrEmail: '',\n      password: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n        var _response$data, _response$data2;\n\n        var setErrors, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref2.setErrors;\n                _context.next = 3;\n                return login(values);\n\n              case 3:\n                response = _context.sent;\n\n                if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.login.errors) {\n                  setErrors(toErrorMap(response.data.login.errors));\n                } else if ((_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.login.user) {\n                  // worked\n                  router.push('/');\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, function (_ref4) {\n    var isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(InputField, {\n      name: \"usernameOrEmail\",\n      label: \"Username or Email\",\n      placeholder: \"username or email\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(InputField, {\n      name: \"password\",\n      label: \"Password\",\n      placeholder: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    })), __jsx(Button, {\n      mt: 4,\n      type: \"submit\",\n      variantColor: \"teal\",\n      isLoading: isSubmitting,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, \"Login\"));\n  }));\n};\n_c = ChangePassword;\n\nChangePassword.getInitialProps = function (_ref5) {\n  var query = _ref5.query;\n  return {\n    token: query.token\n  };\n};\n\nexport default ChangePassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/change-password/[token].tsx"],"names":["Wrapper","Formik","Form","login","toErrorMap","InputField","Box","Button","ChangePassword","token","usernameOrEmail","password","values","setErrors","response","data","errors","user","router","push","isSubmitting","getInitialProps","query"],"mappings":";;;;;;;;AACA,SAASA,OAAT,QAAwB,0BAAxB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,UAAT,QAA2B,6BAA3B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AAEA,OAAO,IAAMC,cAA2C,GAAG,SAA9CA,cAA8C,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACxE,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEC,MAAAA,eAAe,EAAE,EAAnB;AAAuBC,MAAAA,QAAQ,EAAE;AAAjC,KADjB;AAEE,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiBC,gBAAAA,SAAjB,SAAiBA,SAAjB;AAAA;AAAA,uBACeV,KAAK,CAACS,MAAD,CADpB;;AAAA;AACFE,gBAAAA,QADE;;AAER,sCAAIA,QAAQ,CAACC,IAAb,mDAAI,eAAeZ,KAAf,CAAqBa,MAAzB,EAAiC;AAC/BH,kBAAAA,SAAS,CAACT,UAAU,CAACU,QAAQ,CAACC,IAAT,CAAcZ,KAAd,CAAoBa,MAArB,CAAX,CAAT;AACD,iBAFD,MAEO,uBAAIF,QAAQ,CAACC,IAAb,oDAAI,gBAAeZ,KAAf,CAAqBc,IAAzB,EAA+B;AACpC;AACAC,kBAAAA,MAAM,CAACC,IAAP,CAAY,GAAZ;AACD;;AAPO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYG;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,KAAK,EAAC,mBAFR;AAGE,MAAA,WAAW,EAAC,mBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,KAAK,EAAC,UAFR;AAGE,MAAA,WAAW,EAAC,UAHd;AAIE,MAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CANF,EAcE,MAAC,MAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,YAAY,EAAC,MAHf;AAIE,MAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,CADD;AAAA,GAZH,CADF,CADF;AA0CD,CA3CM;KAAMZ,c;;AA6CbA,cAAc,CAACa,eAAf,GAAiC,iBAAe;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAC9C,SAAO;AACLb,IAAAA,KAAK,EAAEa,KAAK,CAACb;AADR,GAAP;AAGD,CAJD;;AAMA,eAAeD,cAAf","sourcesContent":["import { NextPage } from 'next';\nimport { Wrapper } from '../../components/Wrapper';\nimport { Formik, Form } from 'formik';\nimport login from '../login';\nimport { toErrorMap } from '../../utils/toErrorMap';\nimport { InputField } from '../../components/InputField';\nimport { Box, Button } from '@chakra-ui/core';\n\nexport const ChangePassword: NextPage<{ token: string }> = ({ token }) => {\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ usernameOrEmail: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await login(values);\n          if (response.data?.login.errors) {\n            setErrors(toErrorMap(response.data.login.errors));\n          } else if (response.data?.login.user) {\n            // worked\n            router.push('/');\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"usernameOrEmail\"\n              label=\"Username or Email\"\n              placeholder=\"username or email\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                placeholder=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              variantColor=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Login\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nChangePassword.getInitialProps = ({ query }) => {\n  return {\n    token: query.token as string,\n  };\n};\n\nexport default ChangePassword;\n"]},"metadata":{},"sourceType":"module"}