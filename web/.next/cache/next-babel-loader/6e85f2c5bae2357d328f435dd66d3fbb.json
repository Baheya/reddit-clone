{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/post/[id].tsx\";\nvar __jsx = React.createElement;\nimport { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Layout } from '../../components/Layout';\nimport { usePostQuery } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\n\nconst Post = ({}) => {\n  var _data$post;\n\n  const router = useRouter();\n  const intId = typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  const [{\n    data,\n    fetching\n  }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId\n    }\n  });\n\n  if (fetching) {\n    return __jsx(Layout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"loading...\"));\n  }\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 10\n    }\n  }, data === null || data === void 0 ? void 0 : (_data$post = data.post) === null || _data$post === void 0 ? void 0 : _data$post.text);\n};\n\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Post);","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/post/[id].tsx"],"names":["withUrqlClient","useRouter","React","Layout","usePostQuery","createUrqlClient","Post","router","intId","query","id","parseInt","data","fetching","pause","variables","post","text","ssr"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,WAA/B;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,yBAAvB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;;AAEA,MAAMC,IAAI,GAAG,CAAC,EAAD,KAAQ;AAAA;;AACnB,QAAMC,MAAM,GAAGN,SAAS,EAAxB;AACA,QAAMO,KAAK,GACT,OAAOD,MAAM,CAACE,KAAP,CAAaC,EAApB,KAA2B,QAA3B,GAAsCC,QAAQ,CAACJ,MAAM,CAACE,KAAP,CAAaC,EAAd,CAA9C,GAAkE,CAAC,CADrE;AAEA,QAAM,CAAC;AAAEE,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,IAAuBT,YAAY,CAAC;AACxCU,IAAAA,KAAK,EAAEN,KAAK,KAAK,CAAC,CADsB;AAExCO,IAAAA,SAAS,EAAE;AACTL,MAAAA,EAAE,EAAEF;AADK;AAF6B,GAAD,CAAzC;;AAOA,MAAIK,QAAJ,EAAc;AACZ,WACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF;AAKD;;AAED,SAAO,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,IAAT,aAASA,IAAT,qCAASA,IAAI,CAAEI,IAAf,+CAAS,WAAYC,IAArB,CAAP;AACD,CApBD;;AAsBA,eAAejB,cAAc,CAACK,gBAAD,EAAmB;AAAEa,EAAAA,GAAG,EAAE;AAAP,CAAnB,CAAd,CAAgDZ,IAAhD,CAAf","sourcesContent":["import { withUrqlClient } from 'next-urql';\nimport { useRouter } from 'next/router';\nimport React from 'react';\nimport { Layout } from '../../components/Layout';\nimport { usePostQuery } from '../../generated/graphql';\nimport { createUrqlClient } from '../../utils/createUrqlClient';\n\nconst Post = ({}) => {\n  const router = useRouter();\n  const intId =\n    typeof router.query.id === 'string' ? parseInt(router.query.id) : -1;\n  const [{ data, fetching }] = usePostQuery({\n    pause: intId === -1,\n    variables: {\n      id: intId,\n    },\n  });\n\n  if (fetching) {\n    return (\n      <Layout>\n        <div>loading...</div>\n      </Layout>\n    );\n  }\n\n  return <Layout>{data?.post?.text}</Layout>;\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Post);\n"]},"metadata":{},"sourceType":"module"}