{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { FormControl, FormLabel, Input, FormErrorMessage, Textarea } from '@chakra-ui/core';\nimport { useField } from 'formik';\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      _ = _ref.size,\n      textarea = _ref.textarea,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\", \"textarea\"]);\n\n  var C = Input;\n\n  if (textarea) {\n    C = Textarea;\n  }\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    placeholder: props.placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/components/InputField.tsx"],"names":["React","FormControl","FormLabel","Input","FormErrorMessage","Textarea","useField","InputField","label","_","size","textarea","props","C","field","error","name","placeholder"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SACEC,WADF,EAEEC,SAFF,EAGEC,KAHF,EAIEC,gBAJF,EAKEC,QALF,QAMO,iBANP;AAOA,SAASC,QAAT,QAAyB,QAAzB;AAQA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAK/C;AAAA;;AAAA,MAJJC,KAII,QAJJA,KAII;AAAA,MAHEC,CAGF,QAHJC,IAGI;AAAA,MAFJC,QAEI,QAFJA,QAEI;AAAA,MADDC,KACC;;AACJ,MAAIC,CAAC,GAAGV,KAAR;;AACA,MAAIQ,QAAJ,EAAc;AACZE,IAAAA,CAAC,GAAGR,QAAJ;AACD;;AAJG,kBAKuBC,QAAQ,CAACM,KAAD,CAL/B;AAAA;AAAA,MAKGE,KALH;AAAA,MAKYC,KALZ,iBAKYA,KALZ;;AAMJ,SACE,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCR,KAAjC,CADF,EAEE,MAAC,KAAD,eACMM,KADN,EAEMF,KAFN;AAGE,IAAA,EAAE,EAAEE,KAAK,CAACE,IAHZ;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACK,WAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAQGF,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAR1D,CADF;AAYD,CAvBM;;GAAMR,U;UAUgBD,Q;;;KAVhBC,U","sourcesContent":["import React, { InputHTMLAttributes } from 'react';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Textarea,\n} from '@chakra-ui/core';\nimport { useField } from 'formik';\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n  name: string;\n  label: string;\n  textarea?: boolean;\n};\n\nexport const InputField: React.FC<InputFieldProps> = ({\n  label,\n  size: _,\n  textarea,\n  ...props\n}) => {\n  let C = Input;\n  if (textarea) {\n    C = Textarea;\n  }\n  const [field, { error }] = useField(props);\n  return (\n    <FormControl isInvalid={!!error}>\n      <FormLabel htmlFor={field.name}>{label}</FormLabel>\n      <Input\n        {...field}\n        {...props}\n        id={field.name}\n        placeholder={props.placeholder}\n      />\n      {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n    </FormControl>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}