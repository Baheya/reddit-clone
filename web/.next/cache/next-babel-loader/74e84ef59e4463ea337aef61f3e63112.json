{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport { Link, Stack, Box, Heading, Text, Flex, Button } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\n\nvar Index = function Index() {\n  _s();\n\n  var _useState = useState({\n    limit: 10,\n    cursor: null\n  }),\n      variables = _useState[0],\n      setVariables = _useState[1];\n\n  var _usePostsQuery = usePostsQuery({\n    variables: variables\n  }),\n      _usePostsQuery2 = _slicedToArray(_usePostsQuery, 1),\n      _usePostsQuery2$ = _usePostsQuery2[0],\n      data = _usePostsQuery2$.data,\n      fetching = _usePostsQuery2$.fetching;\n\n  if (!fetching && !data) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"no posts\");\n  }\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(Flex, {\n    align: \"center\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, __jsx(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, \"Reddit\"), __jsx(NextLink, {\n    href: \"/create-post\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    ml: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, \"Create Post\"))), !data && fetching ? __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"loading...\") : __jsx(Stack, {\n    spacing: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, data.posts.posts.map(function (p) {\n    return __jsx(Box, {\n      key: p.id,\n      p: 5,\n      shadow: \"md\",\n      borderWidth: \"1px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, __jsx(Heading, {\n      fontSize: \"xl\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }\n    }, p.title), __jsx(Text, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }\n    }, p.textSnippet));\n  })), data && data.posts.hasMore && __jsx(Flex, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(Button, {\n    onClick: function onClick() {\n      setVariables({\n        limit: variables.limit,\n        cursor: data.posts.posts[data.posts.posts.length - 1].createdAt\n      });\n    },\n    isLoading: fetching,\n    m: \"auto\",\n    my: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"Load more\")));\n};\n\n_s(Index, \"CQ4PCWAutDFIMNg6UoNvLv5zzBM=\", false, function () {\n  return [usePostsQuery];\n});\n\n_c = Index;\nexport default withUrqlClient(createUrqlClient, {\n  ssr: true\n})(Index);\n\nvar _c;\n\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/index.tsx"],"names":["withUrqlClient","createUrqlClient","usePostsQuery","Layout","Link","Stack","Box","Heading","Text","Flex","Button","NextLink","useState","Index","limit","cursor","variables","setVariables","data","fetching","posts","map","p","id","title","textSnippet","hasMore","length","createdAt","ssr"],"mappings":"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","sourcesContent":["// import { DarkModeSwitch } from '../components/DarkModeSwitch';\nimport { withUrqlClient } from 'next-urql';\nimport { createUrqlClient } from '../utils/createUrqlClient';\nimport { usePostsQuery } from '../generated/graphql';\nimport { Layout } from '../components/Layout';\nimport { Link, Stack, Box, Heading, Text, Flex, Button } from '@chakra-ui/core';\nimport NextLink from 'next/link';\nimport { useState } from 'react';\n\nconst Index = () => {\n  const [variables, setVariables] = useState({\n    limit: 10,\n    cursor: null as null | string,\n  });\n  const [{ data, fetching }] = usePostsQuery({ variables });\n\n  if (!fetching && !data) {\n    return <div>no posts</div>;\n  }\n  return (\n    <Layout>\n      <Flex align=\"center\">\n        <Heading>Reddit</Heading>\n        <NextLink href=\"/create-post\">\n          <Link ml=\"auto\">Create Post</Link>\n        </NextLink>\n      </Flex>\n      {/* <DarkModeSwitch /> */}\n      {!data && fetching ? (\n        <div>loading...</div>\n      ) : (\n        <Stack spacing={8}>\n          {data!.posts.posts.map((p) => (\n            <Box key={p.id} p={5} shadow=\"md\" borderWidth=\"1px\">\n              <Heading fontSize=\"xl\">{p.title}</Heading>\n              <Text mt={4}>{p.textSnippet}</Text>\n            </Box>\n          ))}\n        </Stack>\n      )}\n      {data && data.posts.hasMore && (\n        <Flex>\n          <Button\n            onClick={() => {\n              setVariables({\n                limit: variables.limit,\n                cursor: data.posts.posts[data.posts.posts.length - 1].createdAt,\n              });\n            }}\n            isLoading={fetching}\n            m=\"auto\"\n            my={8}\n          >\n            Load more\n          </Button>\n        </Flex>\n      )}\n    </Layout>\n  );\n};\n\nexport default withUrqlClient(createUrqlClient, { ssr: true })(Index);\n"]},"metadata":{},"sourceType":"module"}