{"ast":null,"code":"var _jsxFileName = \"/Users/beya/Documents/Programming/reddit-clone/web/src/pages/register.tsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useRegisterMutation } from '../generated/graphql';\nexport const Register = ({}) => {\n  const [, register] = useRegisterMutation();\n  return __jsx(Wrapper, {\n    variant: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: async (values, {\n      setErrors\n    }) => {\n      var _response$data;\n\n      const response = await register(values);\n\n      if ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.register.errors) {\n        setErrors({\n          username: 'hey im an error'\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, ({\n    isSubmitting\n  }) => __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, __jsx(InputField, {\n    name: \"username\",\n    label: \"Username\",\n    placeholder: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }), __jsx(Box, {\n    mt: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, __jsx(InputField, {\n    name: \"password\",\n    label: \"Password\",\n    placeholder: \"password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  })), __jsx(Button, {\n    mt: 4,\n    type: \"submit\",\n    variantColor: \"teal\",\n    isLoading: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Register\"))));\n};\nexport default Register;","map":{"version":3,"sources":["/Users/beya/Documents/Programming/reddit-clone/web/src/pages/register.tsx"],"names":["React","Formik","Form","Box","Button","Wrapper","InputField","useRegisterMutation","Register","register","username","password","values","setErrors","response","data","errors","isSubmitting"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAIA,OAAO,MAAMC,QAAiC,GAAG,CAAC,EAAD,KAAQ;AACvD,QAAM,GAAGC,QAAH,IAAeF,mBAAmB,EAAxC;AACA,SACE,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,aAAa,EAAE;AAAEG,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADjB;AAEE,IAAA,QAAQ,EAAE,OAAOC,MAAP,EAAe;AAAEC,MAAAA;AAAF,KAAf,KAAiC;AAAA;;AACzC,YAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACG,MAAD,CAA/B;;AACA,4BAAIE,QAAQ,CAACC,IAAb,mDAAI,eAAeN,QAAf,CAAwBO,MAA5B,EAAoC;AAClCH,QAAAA,SAAS,CAAC;AACRH,UAAAA,QAAQ,EAAE;AADF,SAAD,CAAT;AAGD;AACF,KATH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWG,CAAC;AAAEO,IAAAA;AAAF,GAAD,KACC,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,WAAW,EAAC,UAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,MAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,KAAK,EAAC,UAFR;AAGE,IAAA,WAAW,EAAC,UAHd;AAIE,IAAA,IAAI,EAAC,UAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAcE,MAAC,MAAD;AACE,IAAA,EAAE,EAAE,CADN;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,YAAY,EAAC,MAHf;AAIE,IAAA,SAAS,EAAEA,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,CAZJ,CADF,CADF;AAyCD,CA3CM;AA6CP,eAAeT,QAAf","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useRegisterMutation } from '../generated/graphql';\n\ninterface registerProps {}\n\nexport const Register: React.FC<registerProps> = ({}) => {\n  const [, register] = useRegisterMutation();\n  return (\n    <Wrapper variant=\"small\">\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={async (values, { setErrors }) => {\n          const response = await register(values);\n          if (response.data?.register.errors) {\n            setErrors({\n              username: 'hey im an error',\n            });\n          }\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <InputField\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"username\"\n            />\n            <Box mt={4}>\n              <InputField\n                name=\"password\"\n                label=\"Password\"\n                placeholder=\"password\"\n                type=\"password\"\n              />\n            </Box>\n            <Button\n              mt={4}\n              type=\"submit\"\n              variantColor=\"teal\"\n              isLoading={isSubmitting}\n            >\n              Register\n            </Button>\n          </Form>\n        )}\n      </Formik>\n    </Wrapper>\n  );\n};\n\nexport default Register;\n"]},"metadata":{},"sourceType":"module"}